dnl
dnl Process this file with autoconf to produce a configure script.
dnl
dnl TinyMUCK fb5.x auto-config script writen by: Peter "WhiteFire" Torkelson
dnl
AC_REVISION($Revision: 1.25 $)dnl
AC_INIT(game.c)
AC_CONFIG_HEADERS(inc/autoconf.h)
echo " "
echo "ProtoMUCK auto-configure script."
echo " "
echo "This script will try and determine things about your system so"
echo "that Proto can compile correctly. This will create your Makefile"
echo "and the header file autoconf.h in the include directory."
echo " "

dnl
dnl Find the compiler first.
dnl
AC_PROG_CC
AC_PROG_CPP

dnl
dnl Specific systems tests.
dnl
AC_ISC_POSIX
AC_MINIX

dnl AC_PROG_LEX
dnl AC_PROG_YACC

# 'readlink -f' isn't reliably cross platform. :/
cd $srcdir
srcdir_full=`pwd -P`
branchdir=${srcdir_full##*/branches/}
cd $OLDPWD # yes, they can be different.

if test "$srcdir_full" != "$branchdir"
then
    # before: davin/foo/bar/src
    branchdir=`echo ${branchdir%*/src} | sed 's/\//:/'`
    #  after: davin:foo/bar
    AC_DEFINE_UNQUOTED(PROTO_BRANCH, [$branchdir], [Branch of source code in the repo, used by version.h.])
else
    AC_DEFINE(PROTO_BRANCH, [trunk], [Branch of source code in the repo, used by version.h.])
fi

checkpcredir() { :
    if test -f "$1/include/pcre/pcre.h"; then
        AC_DEFINE(HAVE_PCREINCDIR, [], [PCRE headers are under pcre dir.])
        pcredir="$1"
        return 0
    fi
    if test -f "$1/include/pcre.h"; then
        pcredir="$1"
        return 0
    fi
    return 1
}
dnl Let the user specify where to find the PCRE libs
AC_ARG_WITH(pcre,
    [  --with-pcre=DIR         location of installed PCRE libraries/include files],
    [
    pcreenable=1
    if test "$withval" = "no"; then
        pcreenable=0
    elif test "$withval" != "yes"; then
        AC_MSG_CHECKING([for user-specified PCRE directory])
        checkpcredir "$withval"
        if test -z "$pcredir"; then
            AC_MSG_RESULT([missing])
        else
            AC_MSG_RESULT([found it])
        fi
    fi

    ],
    [
    pcreenable=2
    ]
)
dnl PCRE isn't disabled and user didn't specify a valid path - search for it.
if test -z "$pcredir" -a "$pcreenable" != 0; then
    AC_MSG_CHECKING([for PCRE directory in the usual places])
    for maindir in /usr /usr/local /usr/pkg /opt /sw
    do
        for dir in $maindir $maindir/pcre
        do
            checkpcredir $dir && break 2
        done
    done
    if test -z "$pcredir"; then
        AC_MSG_RESULT([not found])
        if test "pcreenable" = 2; then
            AC_MSG_ERROR([Could not find your PCRE library installation dir at the specified location. Specify "no" to build without.])
        else
            AC_MSG_WARN([PCRE library not found, will not build regexp prims.])
        fi
    else
        AC_MSG_RESULT([$pcredir])
    fi
fi

if test "$pcreenable" != "0"; then
    AC_SUBST(pcredir)
    AC_DEFINE_UNQUOTED(pcredir, "$pcredir", [The base path to the installation for PCRE.  Usually /usr.])

    if test "$pcredir"; then
        INC="$INC -I$pcredir/include"
        LIBS="$LIBS -L$pcredir/lib -lpcre"
        AC_CHECK_LIB(pcre, pcre_free)
        AC_DEFINE(PCRE_SUPPORT, [], [Defined to enable PCRE support])
    fi
    AC_SUBST(INC)
else
    AC_MSG_NOTICE([PCRE support disabled by user, building without regexp prims.])
fi

AC_ARG_WITH(ssl,
[  --with-ssl[=ssltop_path]  enable ssl encryption and authorization],
[
if test "$withval" != no; then
    if test "$withval" = yes; then
            SSLTOP=
    else
            SSLTOP=$withval
    fi
    
    found_sslh="0"
    if test "$SSLTOP" = ""; then
            AC_CHECK_HEADERS(ssl.h ssl/ssl.h openssl/ssl.h,found_sslh="1")
    else
            oldinc=$INC
            INC="-I$SSLTOP $oldinc"
            AC_CHECK_HEADERS($SSLTOP/ssl.h,
                    AC_DEFINE(HAVE_SSL_H, [], [Enabled if ssl.h exists.])
                    found_sslh="1"
            )
            if test "$found_sslh" = "0"; then
                    INC="-I$SSLTOP/include $oldinc"
                    AC_CHECK_HEADERS($SSLTOP/include/ssl.h,
                            AC_DEFINE(HAVE_SSL_H, [], [Enabled if include/ssl.h exists.])
                            found_sslh="1"
                    )
            fi
            if test "$found_sslh" = "0"; then
                    INC="-I$SSLTOP/include $oldinc"
                    AC_CHECK_HEADERS($SSLTOP/include/ssl/ssl.h,
                            AC_DEFINE(HAVE_SSL_SSL_H, [], [Enabled if include/ssl/ssl.h exists.])
                            found_sslh="1"
                    )
            fi
            if test "$found_sslh" = "0"; then
                    INC="-I$SSLTOP/include $oldinc"
                    AC_CHECK_HEADERS($SSLTOP/include/openssl/ssl.h,
                            AC_DEFINE(HAVE_OPENSSL_SSL_H, [], [Enabled if include/openssl/ssh.h exists.])
                            found_sslh="1"
                    )
            fi
    fi
    if test "$found_sslh" = "0"; then
            AC_MSG_ERROR([cannot locate ssl.h header file.])
    fi
    
    found_ssl_lib="0"
    if test "$SSLTOP" = ""; then
            AC_TRY_LINK_FUNC(SSL_accept, found_ssl_lib="1")
            AC_CHECK_LIB(ssl, SSL_accept,
                    LIBS="-lssl -lcrypto $LIBS"
                    found_ssl_lib="1"
            )
    else
            LIBS="-L$SSLTOP/lib -lssl -lcrypto $LIBS"
            AC_CHECK_LIB(ssl, SSL_accept, found_ssl_lib="1")
    fi
    if test "$found_ssl_lib" = "0"; then
            AC_MSG_ERROR([cannot locate libssl library.])
    fi
    
    AC_DEFINE(USE_SSL, [], [Defined to enable SSL support.])
    AC_SUBST(DEFS)
    AC_SUBST(INC)
    AC_SUBST(SSLTOP)
fi
])

AC_ARG_WITH(jansson,
[  --with-jansson[=janssonpath]  use Jansson for JSON support],
[
if test "$withval" != no; then
    if test "$withval" = yes; then
        JANSSONTOP=
    else
        JANSSONTOP=$withval
    fi

    found_jansson="0"
    if test "$JANSSONTOP" = ""; then
        AC_CHECK_HEADERS(jansson.h,
        found_jansson="1")

        AC_CHECK_HEADERS(jansson.h,
            AC_DEFINE(HAVE_JANSSON_H, [], [Defined if jansson.h exists.])
            found_jansson="1"
        )
    else
        AC_CHECK_HEADERS($JANSSONTOP/include/jansson.h,
            AC_DEFINE(HAVE_JANSSON_H, [], [Defined if jansson.h exists.])
            INCL="-I$JANSSONTOP/include -L$JANSSONTOP/lib $INCL"
            LIBS="-L$JANSSONTOP/lib $LIBS"
            found_jansson="1"
        )
    fi

    if test "$found_janssonh" = "0"; then
        AC_MSG_ERROR([cannot locate jansson.h header file.])
    fi

    AC_DEFINE(JSON_SUPPORT, [], [Defined to enable JSON support])
    AC_SUBST(INCL)
    LIBS="-ljansson $LIBS"
fi
])

AC_ARG_WITH(mysql,
[  --with-mysql[=mysqlpath]  use MySQL database support],
[
if test "$withval" != no; then
    if test "$withval" = yes; then
        MYSQLTOP=
    else
        MYSQLTOP=$withval
    fi
    
    found_mysql="0"
    if test "$MYSQLTOP" = ""; then
        AC_CHECK_HEADERS(mysql.h,
    	found_mysql="1")
    
        AC_CHECK_HEADERS(mysql/mysql.h,
            AC_DEFINE(HAVE_MYSQL_H, [], [Defined if mysql.h exists.])
            INCL="-Imysql -L/usr/lib/mysql $INCL" 
            found_mysql="1"
        )
    else
        AC_CHECK_HEADERS($MYSQLTOP/include/mysql/mysql.h,  
            AC_DEFINE(HAVE_MYSQL_H, [], [Defined if mysql.h exists.])
            INCL="-I$MYSQLTOP/include -I$MYSQLTOP/include/mysql -L$MYSQLTOP/lib -L$MYSQLTOP/lib/mysql $INCL"
            LIBS="-L$MYSQLTOP/lib -L$MYSQLTOP/lib/mysql $LIBS"
            found_mysql="1"
        )
    fi
    
    if test "$found_mysqlh" = "0"; then
        AC_MSG_ERROR([cannot locate mysql.h header file.])
    fi
    
    AC_DEFINE(SQL_SUPPORT, [], [Defined to enable MySQL support])
    AC_SUBST(INCL)
    LIBS="-lmysqlclient $LIBS"
fi
])


AC_ARG_WITH(modules,
[  --with-modules          use modular code support],
[

found_dl="0"
AC_CHECK_HEADERS(dlfcn.h,
    AC_DEFINE(HAVE_DLFCN_H, [], [Defined if dlfcn.h exists.])
    found_dl="1"
)

if test "$found_dl" = "0"; then
    AC_MSG_ERROR([cannot locate dlfcn.h header file. (required for modular support)])
fi

AC_CHECK_LIB(dl, dlopen)

AC_DEFINE(MODULAR_SUPPORT, [], [Defined to enable modular support])
LIBS="-rdynamic $LIBS"
])

AC_ARG_ENABLE(reslvd,
[  --enable-reslvd         enable shared resolver support (reslvd)],
[
if test "$enableval" != "no"; then
    AC_DEFINE(SUPPORT_RESLVD, [], [Defined to enable reslvd support.])
fi
])

AC_ARG_ENABLE(compress,
[  --disable-compress      disable database compression],
[
if test "$enableval" = "no"; then
    AC_DEFINE(NO_COMPRESS, [], [Defined to DISABLE compression support.])
fi
])

AC_ARG_ENABLE(ipv6,
[  --enable-ipv6           enable ipv6],
[
if test "$enableval" != "no"; then
    AC_DEFINE(IPV6, [], [Defined to compile for ipv6])
fi
])

AC_ARG_ENABLE(gprof,
[  --enable-gprof          compile with gprof profiling enabled],
[
if test "$enableval" = "yes"; then
    DEBUG_FLAGS+="-pg"
fi
])

AC_ARG_ENABLE(debug,
[  --enable-debug[=number]   Compile with extended debugging enabled. This is the
                          same as setting -g(number) in CFLAGS. The keyword "full"
                          is the same as "--enable-debug=3" and disables compiler
                          optimizations. (CFLAGS=-g3 -O0) ],
[
    if test "$enableval" = "no"; then
        DEBUG_FLAGS+=""
    elif test "$enableval" = "full"; then
        DEBUG_FLAGS="-g3 -O0"
    elif test "$enableval" != "yes"; then
        # TODO: Make sure it's a number.
        DEBUG_FLAGS+="-g${enableval}"
    else
        DEBUG_FLAGS+="-g"
    fi

],
[
    # Assume they want debugging symbols.
    DEBUG_FLAGS+=" -g"
])

AC_SUBST([DEBUG_FLAGS])



dnl
dnl Header files
dnl
AC_CHECK_HEADERS(malloc.h memory.h string.h unistd.h sys/resource.h sys/signal.h)
AC_CHECK_HEADERS(sys/malloc.h errno.h sys/errno.h)
AC_CHECK_HEADERS(sys/time.h timebits.h)
AC_CHECK_HEADERS(varargs.h stdarg.h)
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_TIME
AC_CHECK_SIZEOF([long int])
AC_CHECK_SIZEOF([int])

dnl echo -n "checking for tm_gmtoff..."
dnl found_gmt_offset=0
dnl AC_EGREP_HEADER(\<tm_gmtoff[[ 	]]*;, time.h,
dnl	AC_DEFINE(HAVE_TM_GMTOFF)
dnl 	found_gmt_offset=1
dnl 	echo -n " time.h"
dnl )
dnl AC_EGREP_HEADER(\<tm_gmtoff[[ 	]]*;, sys/time.h,
dnl 	AC_DEFINE(HAVE_SYS_TM_GMTOFF)
dnl 	found_gmt_offset=1
dnl 	echo -n " sys/time.h"
dnl )
dnl AC_EGREP_HEADER(\<_timezone\>, time.h,
dnl 	AC_DEFINE(HAVE__TIMEZONE)
dnl 	found_gmt_offset=1
dnl 	echo -n " _timezone"
dnl )
dnl if test "$found_gmt_offset" = "0"; then
dnl 	echo "not found."
dnl else
dnl 	echo ""
dnl fi


AC_DEFUN([CHECK_ZLIB],
#
# Handle user hints
#
[AC_MSG_CHECKING()
AC_ARG_WITH(zlib,
[  --with-zlib=DIR         root directory path of zlib installation [defaults to
                           /usr/local or /usr if not found in /usr/local]],
[if test "$withval" != no ; then
  AC_MSG_RESULT(yes)
  if test -d "$withval"
  then
    ZLIB_HOME="$withval"
  else
    AC_MSG_WARN([Sorry, $withval does not exist, checking usual places])
  fi
else
  AC_MSG_RESULT(no)
fi])

if test ! -f "${ZLIB_HOME}/include/zlib.h"
then
        ZLIB_HOME=/usr
fi
if test ! -f "${ZLIB_HOME}/include/zlib.h"
then
        ZLIB_HOME=/usr/local
fi

#
# Locate zlib, if wanted
#
if test -n "${ZLIB_HOME}"
then
        ZLIB_OLD_LDFLAGS=$LDFLAGS
        ZLIB_OLD_CPPFLAGS=$LDFLAGS
        LDFLAGS="$LDFLAGS -L${ZLIB_HOME}/lib"
        CPPFLAGS="$CPPFLAGS -I${ZLIB_HOME}/include"
        AC_LANG_SAVE
        AC_LANG_C
        AC_CHECK_LIB(z, inflateEnd, [zlib_cv_libz=yes], [zlib_cv_libz=no])
        AC_CHECK_HEADER(zlib.h, [zlib_cv_zlib_h=yes], [zlib_cv_zlib_h=no])
        AC_LANG_RESTORE
        if test "$zlib_cv_libz" = "yes" -a "$zlib_cv_zlib_h" = "yes"
        then
                #
                # If both library and header were found, use them
                #
                AC_CHECK_LIB(z, inflateEnd)
                AC_MSG_CHECKING(zlib in ${ZLIB_HOME})
                AC_MSG_RESULT(ok)
                AC_DEFINE(HAVE_ZLIB, [], [Defined to compile ZLIB support])
        else
                #
                # If either header or library was not found, revert and bomb
                #
                AC_MSG_CHECKING(zlib in ${ZLIB_HOME})
                LDFLAGS="$ZLIB_OLD_LDFLAGS"
                CPPFLAGS="$ZLIB_OLD_CPPFLAGS"
                AC_MSG_RESULT(failed)
        fi
fi

])


CHECK_ZLIB


dnl
dnl Check if socklen_t is defined in sys/socket.h.
dnl
AC_DEFUN([TYPE_SOCKLEN_T],
[AC_CACHE_CHECK([for socklen_t], ac_cv_type_socklen_t,
[
  AC_TRY_COMPILE(
    [#include <sys/types.h>
     #include <sys/socket.h>],
    [socklen_t len = 42; return 0;],
    ac_cv_type_socklen_t=yes,
    ac_cv_type_socklen_t=no)
  ])
  if test $ac_cv_type_socklen_t != yes; then
    AC_DEFINE(socklen_t, int, [The type that holds socket length values on this system.])
  fi
])
TYPE_SOCKLEN_T

AC_CHECK_FUNCS(mallinfo getrlimit getrusage random snprintf vsnprintf)
AC_CHECK_MEMBER([struct mallinfo.hblks])
AC_CHECK_MEMBER([struct mallinfo.keepcost])
AC_CHECK_MEMBER([struct mallinfo.treeoverhead])
AC_CHECK_MEMBER([struct mallinfo.grain])
AC_CHECK_MEMBER([struct mallinfo.allocated])
AC_CHECK_MEMBER([struct tm.tm_gmtoff])
AC_CHECK_DECL([_timezone])

dnl
dnl Libraries and functions.
dnl
AC_HAVE_LIBRARY(m, [LIBS="$LIBS -lm"])
AC_HAVE_LIBRARY(socket,[LIBS="$LIBS -lsocket"] )
AC_HAVE_LIBRARY(nsl, [LIBS="$LIBS -lnsl"])
AC_FUNC_VPRINTF
AC_CHECK_LIB(util, setproctitle)
AC_CHECK_FUNCS(mallinfo getrlimit getrusage random setproctitle)

dnl
dnl Experimental threading
dnl
AC_ARG_WITH(experimental-threading,
[  --with-experimental-threading  Enable experimental threading support],
[
if test "$withval" != no; then
    AC_CHECK_HEADERS(pthread.h)
    AC_CHECK_LIB(pthread, pthread_create)
    AC_DEFINE(EXPERIMENTAL_THREADING, [], [Defined to enable experimental threading support])
fi
])

dnl
dnl Types and structures
dnl
AC_TYPE_PID_T
AC_TYPE_UID_T
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL
AC_STRUCT_TM
AC_STRUCT_TIMEZONE
AC_CHECK_TYPES(long long)

dnl
dnl Compiler characteristics
dnl
AC_C_CONST
AC_C_INLINE

dnl
dnl Uname -a, just becuse.
dnl
echo "checking value of uname -a"
AC_DEFINE_UNQUOTED(UNAME_VALUE, "`uname -a`", [The value of the uname -a command.])

dnl
dnl Set the additional CFLAGS
dnl
#AC_SUBST(AM_CFLAGS)

dnl
dnl And in the end, there was no more.
dnl
AC_OUTPUT(Makefile)

if test \! -r inc/config.h
then
    AC_OUTPUT(inc/config.h)
else
    echo -e "\nPreserving your existing inc/config.h."
    echo "You may be missing new features."
fi

echo " "
echo "You should review the options in inc/config.h, and"
echo "then type the following to build your system:"
echo " "
echo " make"
echo " "

