
NeonMuck source code is Copyright 1996 by Andrew Nelson and Jeremy Blackman,
all rights reserved.

Fuzzball and TinyMuck code has additional copyrights and disclaimers to be
found in the standard fuzzball tinymuck source code distribution which must
be adhered to when using this server distribution.

			* * * * * * * * * * * * *
			* Shameless Hacks List  *
			* * * * * * * * * * * * *

Set something so program logs show a player's mucker level.

@/lockout-msg: show to player and not let them log in. (CYNBE_FIX)

Search for #ifdef FUZZ's, many other things Cynbe changed.

Added @tune parameters for codewizard and corewizard (for logging, etc.)

Set program log to do {{{ }}} folding syntax and to show player flags.

Added @tune parameters for max_mortals, can disable all non-wiz logins.

Added !WHO to override muf-program '@WHO ' replacements.

Added @tune parameter reg_email = me@wherever to set email of registration
  wizard for special registration cases and lockouts.
  Note: welcome.txt needs to be changed to note how to register ala:
  register playername email-address

Added @hopper command and code to "register" for new online e-mail
  registration system for wizards.

Added 'wizchat'/'wc' command so wizards can chat amongst themselves, notify
  others wizards of potential tinyjerk situations, etc.

wall_wizards was changed not to go to codewizard/corewizard, as they most
  likely would prefer not to be bothered with such things, and player gripes
  should be as private as possible.  Being set '@nowizwall' or 'Q' should keep
  a wizard from hearing the walls.

Added @tune parameter reg_wiz to ensure the registration hopper isn't worked
  over doubly at the same time.  Note that the status log also has all
  register requests in case a @hop clear is done right as a new one comes in.

Changed @tune so both *player matches and 'me' will match for dbref entries.

Added @tune parameter building to stop db-growth if dangerous.
  Commands that lower db bloat such as @recycle are not affected.
  Other commands such as @link, @action, @edit, are also unaffected.

Added @tune parameter db_readonly to stop major/minor db changes.
  This is mainly useful to let characters log in to an old db to @archive
  belongings without fear of players mass-recycling themselves, etc.
  @toad, @newpassword, and @tune still work to handle baddies.
  Otherwise the game is basically in 'look but don't touch' mode.

Changed @name so a wizard can '@name *player=newname yes' if that player does
  not have a wizard bit.  This will help the onslaught of new players claiming
  to be old players that we have no way to verify.  We can safely move the
  old player with an old name in case the real owner might come back.  This
  will protect any page #mails, morphs, etc, even if the player has no
  belongings.  We will also be able to rename profane names without
  @newpasswording, but I'm not sure that's a good thing yet. :)

Removed all abilities of Players to be 'dark' anywhere but in dark rooms.

Changed look so 'dark' rooms will not show contents even if the owner controls
  the room.  Examine will still show all contents.

Changed 'simple_look' in look.c so the 'command @' variable is set to the
  name of the thing that was looked at instead of '(@desc)'.  All mods are
  in look.c alone to do this.

Added a small feep to record _sys/lastcleantime for cleanup intervals.

Fixed program logging with the new unparsing of both player and program.  A
  buffer is needed for each unparse_object if it is used more than once in a
  notify or printf style command.  On Betz (an Irix) the second unparseobjed
  object would be printed for both values, on Linux the first one would be
  printed.  So much for thinking we know which way commands inside commands
  process in C (and possibly if clauses too.)

Added logging failed attempts by mortals to @armageddon.

Added support so mortals can do !@ps.

Set it so wizards can't @force other wizards.

Fixed MPI ref() and flags() to require strict privileges to get that info.

Added @/mage feeps to some wizard commands: (@set *player=@/mage:when:who:why)
@stats   -- check anything and see DB usage stats.
@usage   -- can use it
@memory  -- can use it
@dbginfo -- can use it (whatever it is ;)

Fixed @tel so players can @tel to Jump_Ok rooms and to/from their home.
  Rooms set _private are an interesting thought.  If the room is set _private
  and Jump_Ok, only the owner would be able to enter it.  If the room is set
  _private:yes and not Jump_Ok, only the owner would be able to enter it.  This
  seems to make the Jump_Ok flag pointless, if we were to add the check for
  _private:yes rooms.  Thus a check to _private:yes is redundant since the
  Jump_Ok flag is already part of the server.  In conclusion, if a person
  wants a room truly private, it should not be set Jump_Ok.

Fixed @teleport matching so it will see things in the room (I hope.)

Feeped @teleport so you can teleport into players. O:) (Well wizzes at least.)

Fixed a signal handler conflict so the resolver works with @hopper register!

Added : and ; pose capability to wizchat, special @ feep for spoofs.

Fixed muf 'parseprop' prim to strip any nonprinting chars from return string.

Fixed muf 'moveto' prim to allow moving to players and vehicles.  Non W-bit
  muf programs must have player or thing destination be set vehicle, and
  follow other moveto restrictions.

Changed no-login idle boot time from 5 mins to 1 min.

Added a call to resolve_hostnames() in the registration connection command
  in hopes of getting a bit better chance of getting non-numerical site ids.

Condensed the wizard WHO list so hosts have about 7 more characters to fit
  on a line.  The 'Doing...' title in WHO with who_doing @tuned on is now
  replaced with what is in the _poll property of Room #0, if it is set.  The
  max # of the _poll and @doing lines was set to 43 characters, to make the
  max WHO line length 79 characters.  (Bob always demands I make everything
  a max of 79 chars wide.  Some weird terminals don't handle the 80th one
  right.)

Fixed @tune so you can @tune db_ref=#-1 to unset dbrefs.

Changed the KILL_OK flag into GUEST, removed tp_restrict_kill and KILL flag
  references.  Added code everywhere to prevent commands a Guest might use
  to mangle the Guest character or bloat the db.  This flag should also be
  good to limit what potential tinyjerks can do.  No building, programming,
  examining, or @setting of any properties.  Muf programs could give guests
  the ability to do these things still, however.

Added a 'help' command to the connection screen which spits a file similar
  to data/welcome.txt called connect.txt.  This should allow for an easier
  to understand connection process while allowing a prettier login screen.

Fixed bugs with db_readonly which caused room descriptions to disappear. 
  Use db_readonly=yes ONLY if you have a backup of your db!!!  It wasn't
  designed for dbs that you care about, that's why it's so hard to type!

Altered several Muf and MPI prim mucker levels, disabled M3 from being able
  to write to _props.  Let M2 use parseprop (not sure if M1 should too?)

Added ANSI COLOR to Fuzzball via the C flag on players.  Several In-Server
  changes and many muf modifications were needed to pull this off.  To note,
  an ansi_notify muf prim, {ansi:text} MPI notify prim, ansi_unparse_obj,
  and several other support routines were added.

--- AFTER SOURCE CODE LOST ---

Switch to M, M1-M3, W1-W3 wizard levels, see 'help newlevels'.  Added
  GUEST, LOGWALL, MUFCOUNT, ETHEREAL, and MOBILE flags to a 2nd flagset
  that stores on the same line as the 'flags' line of fuzzball mucks.

Added logwall, guest, mufcount functionality.  logwall on a wizard will
  show all status_logs to them while online.  Mufcount lists the # of
  instructions when a muf program finishes.  Ethereal and Mobile have yet
  to be given meaning.

The 'dark' flag on players now debugspams them with ALL programs that they
  run.  No permissions checking, etc.  The reason for this is so I can debug
  problems with Guest programs without having to set them Wizard so they see
  the debug spam.  Heh.  I know it's a bad hack. ;)

Re-added the 'viewable' flag so only owners can @set them on things.

Fixed it so guests can do 'requests' online.

Registered objects now start with #0 then work down.  Didn't do this for
  normal envprops so @path and such defaults still work.

Added 'dwall' and 'dinfo' commands to get info or wall descriptors like
  one would for @wall or wizchat.  @wall and dwall now can do # for spoofs
  and : for poses ala wizchat.

Added two feeps for @path so they now work with better in-server
  functionality.  These fixes allow 'w' to mean 'whisper' amongst other
  feeps.  Players can now create path names of whatever they want, and
  even have them separated by ;'s.  The fixes are in game.c to do the
  path-moves and in look.c to do the look of the @path.

Changed ANSI so ^^ makes a ^ and any unknown color, like ^ ^ turns things
  back to normal.

Added a ? command to wizchat to show wizards listening.

Added a LOT more color to the server functions.  Green is good, Red is bad.
  Made a 'tct()' function to convert ^s to ^^s to make things work well.
  Changed the old COLOR defs to ANSICOLOR to make incorporating global
  color defines into other programs easier, defining a new set of COLORs
  ala #def RED "^RED^" to be used in various messages.  Renamed ansi_notify
  to anotify and added many other ansi funtions for notify except/from etc.
  Added MPI parsing to inserver say/pose/whisper/page also.

Added an alias 'scan' for '@sweep'. (puppet sniffer.)

Fixed the connect action sequence again so it goes arrive -> connect.

Changed it so with Mageperms objects won't do name notifies in MPI for
tell(), otell(), or ansi().

Added a sprintf() to dump_users() to keep really long names in WHO! from
  spamming, hopefully it won't crash stuff as I used a basic C nono. ;)

Fixed a blunder where I had a host_free() call in host_save() in netresolve.c
  and thus after each db save the hostcache gets cleared.  Doh!

Nuther blunder, had the check inverted for setting vehicles and Zombie
  flags, mortals but not wizards could set them.  Doh!

Added a {propdir} MPI prim, upgraded to fb5.49, hopefully bug free.

Started adding mud code to kill and event queues.  Added 'offer' and 'cast'
  commands.  Very unpolished right now.  This will need to be documented
  once we get to a point it is actually playable/usable.  Need 'flee'
  support.

Added 'connect' log support for all input on the login screen to a
  logs/connects file.  Also added 'dboot' to boot descriptors.

Tinkering with a 'GET' catcher on the login screen to allow the muck to
  serve WWW pages.

Yay! We have home pages!  The '_/www' property is used on players to store
  player personal pages.  This trick REQUIRES that the 'welcome.txt' file
  have NO blank lines and may need Ctrl-M CR/LFs to work correctly for some
  browsers.  (put a space on the line, use the 'joe' editor to be sure it is
  spaced properly.)  You can remove the HTTPD in config.h.  A @tune parameter
  was added for the standard / page.  User pages are accessed with ~username.

Added feep to NOT log programs to logs/programs compiled by ArchWizards.  Other
  mucks may wish to change this from TArch to TWiz or TMage depending on
  trust, disk space, and wizard activity. The fix for this is in edit.c,
  grep for tp_log_programs.

Spruced up @stats and @proginfo more with program memory usage, total
  memory counts too.  @stats now also lists other objects in memory and
  usage besides active programs.

Added 'fast_registration' tune parameter for auto-email-registration. 
  Banned sites and those with ##jerk## email addresses will not be
  automatically created when this is turned on, otherwise when a player
  makes a request the player is automatically created and the email is
  sent out without needing to do a @hop reg.  The data is still stored in
  the hopper logfile in case something goes wrong (many typos in email
  addresses occur.)

Upgraded to 5.50, minor cosmetic fixes to the new code to bring it in line
  with the ratty muck setup.

Added a 'x' BLOCKED status flag to #0=@/sites/ to keep really bad TJs from
  even getting to the login screen.  The connection is canned before ACPT.

Added @tune 'max_output' to set max allowed queued output without recompiling.
  Set this to 16000 or 8000 if you're really tight on memory, or higher to 32000
  or 64000 if you are archiving or listing large programs.

Added {showlist} MPI prim to list a full list out past the mpi limit, like tell.

Upgraded to 5.51, changes {propdir} to {dirprops} to accomodate new foxen stuff.

Revamped the HTTP server to do lsedit lists and have a better chance of having
  site redirection working with more browsers.  Users can have 'trees' of home
  pages using lsedit lists.

Added site-based and random welcome_user screens.  A data/welcome directory
  can hold many custom pages for certain domains.  welcome1.txt-welcomeN.txt
  can be linked to pages in the welcome directory for random pages.  Use
  @tune rand_screens=num of welcomeN.txt files.  You can do frequencies by
  putting a page in the series more than once.  A BARD_FILE in config.h can
  be set to the file to show 'barred' sites.  This can be use a symbolic
  link to another file too.  You set site-specific pages with the format:

  @set #0=@/welcome/1 128.30.5.0:pagename why

  Where the '1' is an order prefix so if you want to do single-machine pages
  and also have larger domains with other pages, basically set this # to the
  # of '0' masks in the site name.  Use 0-4.  The pagename can be either a
  data/welcome/pagename.txt file, '#', or '.'.  '#' means to use randomness
  despite possibly a blockout or other default page.  '.' means to use the
  standard welcome.txt file for that site/domain.  You can put a comment
  after a space in the pagename or the # or . character. Whew!

Fixed a bug in the parse_connect code that truncated email addresses in the
  auto-registration hopper.  Set it so Mages can see the wizard WHO list,
  and use the conhost and conipnum prims.  Also fixed it so Arches can see
  the username in the wizard WHO list again too.  (Long overdue. :)

Upgraded to Fb5.55, requiring some misc mods to existing functions so they
  work with 5.55's new debugging features.  Also some misc fixes:
  Set MAX_COMMAND to 1024 bytes as it is in stock fuzzball; Changed the newbie
  hopper walls to be arch only to spare other wizzes; officially named this
  code along with Loki's mods as 'NeonMuck'; respaced the WHO list again and
  changed sites to show user@host in the wholist for arches.

I added \0s to strings called by format_time(), it would appear sometimes
  format_time will not append a NULL.  I'm not sure if this is a Linux or fb
  bug new to 5.55.  the muf and MPI ftime calls don't have \0s on the end
  just cuz it would require adding a buffer.  Time will tell what this bug is.

